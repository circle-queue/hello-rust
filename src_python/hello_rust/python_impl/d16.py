from typing import Literal, NamedTuple


class Point(NamedTuple):
    i: int
    j: int

    def __add__(self, other: "Point") -> "Point":
        return Point(self.i + other.i, self.j + other.j)

    def __sub__(self, other: "Point") -> "Point":
        return Point(self.i - other.i, self.j - other.j)

    def out_of_bounds(self, input: list[str]) -> bool:
        return (
            self.i < 0
            or self.i >= len(input)
            or self.j < 0
            or self.j >= len(input[self.i])
        )


dir_to_point = {
    "right": Point(0, 1),
    "left": Point(0, -1),
    "up": Point(-1, 0),
    "down": Point(1, 0),
}


class Interaction(NamedTuple):
    direction: Literal["left", "right", "up", "down"]
    dst: Point

    def next_tiles(self, input: list[str]) -> list["Interaction"]:
        hit_tile: Literal["/", "\\", "|", "-", "."] = input[self.dst.i][self.dst.j]
        match hit_tile, self.direction:
            case (".", _) | ("|", "up" | "down") | ("-", "left" | "right"):
                return [
                    Interaction(self.direction, self.dst + dir_to_point[self.direction])
                ]
            case ("|", "left" | "right"):
                return [
                    Interaction("up", self.dst + dir_to_point["up"]),
                    Interaction("down", self.dst + dir_to_point["down"]),
                ]
            case ("-", "up" | "down"):
                return [
                    Interaction("left", self.dst + dir_to_point["left"]),
                    Interaction("right", self.dst + dir_to_point["right"]),
                ]
            case ("/", "up"):
                return [
                    Interaction("right", self.dst + dir_to_point["right"]),
                ]
            case ("/", "down"):
                return [
                    Interaction("left", self.dst + dir_to_point["left"]),
                ]
            case ("/", "left"):
                return [
                    Interaction("down", self.dst + dir_to_point["down"]),
                ]
            case ("/", "right"):
                return [
                    Interaction("up", self.dst + dir_to_point["up"]),
                ]
            case ("\\", "up"):
                return [
                    Interaction("left", self.dst + dir_to_point["left"]),
                ]
            case ("\\", "down"):
                return [
                    Interaction("right", self.dst + dir_to_point["right"]),
                ]
            case ("\\", "left"):
                return [
                    Interaction("up", self.dst + dir_to_point["up"]),
                ]
            case ("\\", "right"):
                return [
                    Interaction("down", self.dst + dir_to_point["down"]),
                ]


def perform_interaction(
    input: list[str], start_interaction: Interaction
) -> tuple[set[Point], set[Interaction]]:
    seen_tiles = set()
    seen_interactions = set()

    stack = [start_interaction]
    while stack:
        e = stack.pop()
        if e in seen_interactions or e.dst.out_of_bounds(input):
            continue
        seen_interactions.add(e)
        seen_tiles.add(e.dst)
        stack += e.next_tiles(input)
    return seen_tiles, seen_interactions


def solve1(input: list[str]) -> str:
    tiles, _ = perform_interaction(input, Interaction("right", Point(0, 0)))
    return str(len(tiles))


def solve2(input: list[str]) -> str:
    all_interactions = set()
    best = 0
    for i in range(len(input)):
        entry = Point(i, 0)
        if Interaction("left", entry) not in all_interactions:
            tiles, interactions = perform_interaction(
                input, Interaction("right", entry)
            )
            all_interactions.update(interactions)
            best = max(best, len(tiles))

        entry = Point(i, len(input[0]) - 1)
        if Interaction("right", entry) not in all_interactions:
            tiles, interactions = perform_interaction(input, Interaction("left", entry))
            all_interactions.update(interactions)
            best = max(best, len(tiles))

    for j in range(len(input[0])):
        entry = Point(0, j)
        if Interaction("up", entry) not in all_interactions:
            tiles, interactions = perform_interaction(input, Interaction("down", entry))
            all_interactions.update(interactions)
            best = max(best, len(tiles))

        entry = Point(len(input) - 1, j)
        if Interaction("down", entry) not in all_interactions:
            tiles, interactions = perform_interaction(input, Interaction("up", entry))
            all_interactions.update(interactions)
            best = max(best, len(tiles))
    return str(best)


sample_input2 = sample_input1 = r""".|...\....
|.-.\.....
.....|-...
........|.
..........
.........\
..../.\\..
.-.-/..|..
.|....-|.\
..//.|....""".splitlines()

full_input1 = full_input2 = r"""\..............................................................-......-.............-........\-...............
./.........................-..-............................../..........|..|.-\..|.|.../.................-....
|......|...\./|....\............./-..........\|............./..../.....|....\.......................-....../..
.......-.....\.........\../............-.-.................|....-\.....\..\......|./..........................
................................./..-.................-\............/......|..../..|.....\|...................
.....|......../.....|...-.............../......\................................\........|.....\......./......
............\............|..........\......\...../......................|.........................\...........
...........................\.......-..|..../.............\........//.................../..-............|......
..................\......................./....-..../........./\.......|................./............/.\.....
.\......./..........\.......\./..--...|..............-..........\.\...../.../....../.-./........./....\.......
..../......./.........|...........................\....................|.............../|.../.../...\..\...../
...-.\|\.....-............................-........................\...............\....-..................../
........\....|.....-...-..|..\..-./..........|.............|..............................\...................
.....\......................................./...........-.........................-....................../...
....\...............................-...........\............\.........-|..-..|........../..-.....|.../......|
........\.......-./...-.../...................................-.......|........./............|.\..............
............\...........-.....\..|.......................|.......|.............\......./...........|..........
.|.....|...................-...|.................................../\....../..../..........|.............|./..
...............|......./......................../......................./.....-.............../.............\.
...\..-/.........-........................-............................/\.\.......-..|..............-.........
...-........./......\..\..............-............/.............-......-.........|................/........-.
............\..\...|.........|..................../\........../..\.....................\............../.......
........\.................................../..../..................|........-................................
...|.../............\-..-....\..|....|........-./.............................\...............................
......-.\.-......\......../.|..........\.|..../..\....................../..\/./...../--...................|...
.......\|............/...|...|.........../........../...........|........./...................................
\........\...........................-/.......................-............-..|......|..............\.........
......................../|............\.............../......|.-\..\.......|../...........-..............-....
.............................\.....-..............|...........|/...../.....-..................../.....-..-/.--
.|...........................-.........|....-/.-.....\.........../.........|......\..../.\.\...............|..
...................\.........................\...................|..../...........-..............-............
...............-.....-.......\.............|........../-.........../..........\.....|............|.../.....-..
..........|.-...................................-............|../.............................|../............
...|..........\.......\....\..........|........./.........-|-............|....................................
./\..../.......|........|....|......../............/............/................................|............
..........................\........................../........|.........................\\................-...
....../....|.../..\.-..|....././|-.....|........................................-.....................-.......
.\.-............./...|..../|........./|...........-\..|.................|.../......................./.........
.........|........../.........\.........../............../..............\....\..............-|................
....-...../...\...........................\.-......|........\...-...|..............|......|.\.....-...........
...-.............................-\.........-..../.\..........-..../......--............................\.....
.................-........|..................-.|................|....-....\...|....../....\...................
...\.........\..........|................/..........|....\./..................../-............./..............
/........\....-......-.-|...........|../........\.|.......|...........|.................-.............|.......
......../....../.......\...............\.......-....................../..................|.../.........\......
.\....../.........|...................................|-.|../.../...........-.-.............\................-
/-..\/.......-........\../.....-..|..................\................|......./...............................
......../.................-..../.................-...-|.........|............../...........|..................
..|......../.....\......................|.....|/...../.............-.|-...-...|......................-........
......|........|.\.........\............-........-/......./.............../......./......................|...\
....|...............\...../.............../......|......../............|/...|........./...../..........-.\.--.
..|.........|......|.............................|...........-....|...-.............../................/......
.....................|........./............./........................................../.........|...........
.....\........................|../.....................-.......|.-........................../../......-.......
..........................-....../.......\.............................-....\................/................
................................-...../.........//.........-...|../....\..................................-...
...........................-................|/|.||............................................\...\.....|.....
..|..........-................/...................-.......|..................................-...............\
../....-.........-...............................................\.....\...........|-............./.......|...
......\...|......../........................./...........................................|....................
.-..................../...-..|.-..\...../.........-............./..........\..................................
....-....-...........-........-........|......................\................................./\....-.......
..........|...................................\.../....../...-......|../............|......|................\.
.-.|.|.|.........-........-....\.........|......../..-.........../............\......-\.......|.......|.......
........|......../.............|...\.\......../...-........\.......\......-........-......./.../..............
..../..........-............/././.........|.-...........|.........../.........................\-....|.........
........\......................../................-................|..\........./...\.......\.\...............
.............\........|....\....../..........|..\................./...||......./|..\................\.....\...
./.|.................................../...|....................|...................|...../.\............../..
.../....................\..........|.-...............................\.........|....|\./.../.\.\..............
\|........./.\...-......\..............\..........|...........\.|\............/...........-...................
....................../..\...\..........................|-..........-\................\......./.-.............
................................/.....................|././......../............/.\...|.......................
.............................-./............|.............|.-.............../..........|.../................./
...............-........................//........././............/...../...-......-\\........................
-././.........../..-....|.......-......./..................-...........|......./......./....|.................
........../.............................\...-............|.............\..-........../......./.\.../.........\
..................|\..........................|..........|....................|...\...........\...............
.....-.....\../....|.|....|.|........|.-..-........................../.........................-........-.....
.....\......\............./..............-.....|........................................\......|...\........|.
..|......../..................................\..........-.............\..............\......|.....-..........
.\....................................|.|.././.-../-..............................|.|........\........./......
....................-.../.../...../......\....|........./........-../...................|..................-..
\...........|...\....-...-..\....................................-.|./..........................\.............
.........\..........\.................-...........-........-....-.-..................\.-........|.-....\......
..........................................|........|..........................\......\......\.-.|...\../...\..
..-..................\.\..-........................................\.........-..|...../......|................
.../....../......\./.\|.../.-........-............-../...........-.......-.........\.|................-.......
..|\..../.|........................|........-/.........-..|......|..........-.....|.......\.../..-......-.....
............................................................../.................\..|...-./............|...../.
..\.|.....-............-/\.............|.............\...............|....../........../....-/..\../......\...
............................/....-.../...................|.....-........|.../....\........-.....-...|...|.....
../..../.............|..\...||......-..-...................-...........\...-.....\.....|.........||..//.......
............................/.....\..\....-................/..../........\....\.................-|............
...-........-..../..........|.......-...|........|....-.......\...|....../...//...|...........\.......|-......
......./.........|../.........../...\............\................/..|..\.\.....................\...|.........
....-.............../.|.../............\..........--...........................|........./......|.............
............./.................\............/......-................/|.............\./........\..|....\.......
............\.............|..|.|\....-...-|/|...\...........................-....../.......|..................
./...../|...\........\|....-...............\\.........../........-../................................-........
-......-.\...|...\..|.|..../.........-...........|...................-.|..............-../............../.....
..|..........|/......................................\.........|............./.................-..|-..........
..\.......\................\...\....................\............................-......|......\....-.....-...
..||................................-...\.-.....|................./......|..............|.....\...............
..................-......../.....|..\.......--.../...../.\-.............-........................../.........\
-.......\............./............/...|...-.../...........\.................|.....\....\.\....-..../..-......
-............/.......\........................................................\..-.....................\......
.../................................................../.........../....|.........\.....................-......
...................|.......\......././................|..-......\....-.....-|...|.....-.......................
..........................-.......................-.....-......-............\.....\....\.-....................""".splitlines()

if __name__ == "__main__":
    input = sample_input1
    input = full_input1

    print(solve1(input))
    print(solve2(input))
